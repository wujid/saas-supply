<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.supply.bpm.mapper.ProcessRunMapper">
    <resultMap id="contentInfoPo" type="com.supply.bpm.model.po.ProcessRunPo">
        <id property="id" column="id" jdbcType="NUMERIC"/>
        <result property="createUserId" column="create_user_id" jdbcType="NUMERIC"/>
        <result property="createTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="updateUserId" column="update_user_id" jdbcType="NUMERIC"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="NUMERIC"/>
    </resultMap>

    <sql id="tableName">
        bpm_process_run pr
    </sql>

    <sql id="columns">
    </sql>


    <select id="getMyTask" resultType="com.supply.bpm.model.response.TaskResponse" parameterType="com.supply.bpm.model.request.TaskRequest">
        select
            bp.id,
            res.id_ as task_id,
            res.execution_id_ as execution_id,
            res.proc_inst_id_ as instance_id,
            res.proc_def_id_ as definition_id,
            res.name_ as node_name,
            res.task_def_key_ as node_id,
            bp.business_id,
            bp.business_title,
            bp.start_user_id,
            res.create_time_,
            bp.process_key,
            bp.process_name,
            bp.category_id,
            bp.category_name
        from
            act_ru_task res
                left join act_ru_identitylink i on i.task_id_ = res.id_
                left join (
                select
                    run.*,
                    def.process_key,
                    def.process_name,
                    def.category_id,
                    cat.`name` as category_name
                from
                    bpm_process_run run
                        left join bpm_process_definition def on run.definition_id = def.definition_id
                        left join bpm_category cat on def.category_id = cat.id
            ) bp on bp.instance_id = res.proc_inst_id_
        <where>
            <if test="request.assigneeId != null and request.assigneeId != '' ">
                res.assignee_ = #{request.assigneeId}
               or ( res.assignee_ is null and i.type_ = 'candidate' and i.user_id_ = #{request.assigneeId} )
            </if>
            <if test="request.assigneeGroups != null and request.assigneeGroups.size()>0" >
               or ( res.assignee_ is null and i.type_ = 'candidate' and i.group_id_ in
                <foreach collection="request.assigneeGroups" item="item" open="(" close=")" separator="," >
                    #{item}
                </foreach>
                )
            </if>
        </where>
        order by
            res.create_time_ desc
    </select>

</mapper>
